



jhoyla                                                       . J Hoyland
Internet-Draft                                           Cloudflare Ltd.
Intended status: Standards Track                       November 04, 2019
Expires: May 7, 2020


                           TLS Key Injection
                     draft-jhoyla-tls-key-injection

Abstract

   TLS is sometimes used in situations where it is necessary to inject
   extra key material into the handshake.  This draft aims to describe
   some methods for doing so securely.  This key material must be
   injected in such a way that both parties agree on what is being
   injected and why, and further in what order.

Note to Readers

   Discussion of this document takes place on the TLS Working Group
   mailing list (tls@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/tls/ [1].

   Source for this draft and an issue tracker can be found at
   https://github.com/jhoyla/draft-jhoyla-tls-key-injection [2].

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on May 7, 2020.

Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.




J Hoyland                  Expires May 7, 2020                  [Page 1]

Internet-Draft              TLS Key Injection              November 2019


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Conventions and Definitions . . . . . . . . . . . . . . . . .   2
   3.  PSK Injection . . . . . . . . . . . . . . . . . . . . . . . .   3
   4.  Additional Derive Secret  . . . . . . . . . . . . . . . . . .   3
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .   3
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   4
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   4
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .   4
     7.2.  Informative References  . . . . . . . . . . . . . . . . .   4
     7.3.  URIs  . . . . . . . . . . . . . . . . . . . . . . . . . .   4
   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .   4
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   4

1.  Introduction

   Injecting key material into the TLS handshake is a non-trivial
   process, because both parties need to agree on what is being injected
   and why.  If the two parties do not agree then there is scope for an
   attacker toc exploit the mismatch to perform channel synchronization
   attacks.

   Injecting key material into the TLS handshake allows other protocols
   to be bound to the handshake, and to provide additional protections
   to the ClientHello message, which in the standard TLS handshake only
   receives protections after the server's Finished message has been
   received.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.





J Hoyland                  Expires May 7, 2020                  [Page 2]

Internet-Draft              TLS Key Injection              November 2019


3.  PSK Injection

   To bind one protocol to another you can use the procedure defined in
   [EPSKI] to add a special PSK to the protocol.  This process gives
   authentication guarantees to both the protocol being bound and TLS.

4.  Additional Derive Secret

   To add confidentiality guarantees to the ClientHello using PSK
   binders is insufficient.  This is because cut-and-paste attacks are
   still possible on the ClientHello.  Even though the handshake will
   fail, information in the ClientHello may still be exposed.

   To inject key material into the Handshake Secret it is recommended to
   use an extra derive secret.

                |
                v
          Derive-Secret(., "derived early", "")
                |
                v
       Input -> HKDF-Extract

                |
                v
          Derive-Secret(., "derived", "")
                |
                v
      (EC)DHE -> HKDF-Extract = Handshake Secret
                |
                v

   As shown in the figure above, the key schedule has an extra derive
   secret and HKDF-Extract step.  This extra step isolates the Input
   material from the rest of the handshake secret, such that even
   maliciously chosen values cannot weaken the security of the key
   schedule overall.

   The additional Derive-Secret with the "derived early" label enforces
   the seperation of the key schedule from vanilla TLS handshakes,
   because HKDFs can be assumed to ensure that keys derived with
   different labels are independent.

5.  Security Considerations

   This draft has not seen substantial security analysis.





J Hoyland                  Expires May 7, 2020                  [Page 3]

Internet-Draft              TLS Key Injection              November 2019


6.  IANA Considerations

   This document has no IANA actions.

7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

7.2.  Informative References

   [EPSKI]    Benjamin, D. and C. Wood, "Importing External PSKs for
              TLS", draft-ietf-tls-external-psk-importer-01 (work in
              progress), October 2019.

7.3.  URIs

   [1] https://mailarchive.ietf.org/arch/browse/tls/

   [2] https://github.com/jhoyla/draft-jhoyla-tls-key-injection

Acknowledgments

   TODO acknowledge.

Author's Address

   Jonathan Hoyland
   Cloudflare Ltd.

   Email: jonathan.hoyland@gmail.com












J Hoyland                  Expires May 7, 2020                  [Page 4]
